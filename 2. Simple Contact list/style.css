html, body{
    height: 100%;
    /*
    So, why i setted the height as 100%? 
    Probably you saw the doc in the html (see the 'index.html'), and there you may read that this project was
    designed with display flex. Then, why the height was setted as 100% if it is flex? Because if i hadn't done
    this the height would adjust to the height of the content, and i don't want it, because my wish is that the
    container centralize horizontal and vertically in the page. You can test it just removing the height.
    */
}

body {
    background-color: aqua;
    margin: 0;
    padding: 0;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    display: flex;
    justify-content: center; /* Align the content along the main axis. */
    align-items: center;  /* Align the content along the cross axis. */
    flex-direction: column; /*The container will don't ocuppy the same row (like a line), but the same column.
    However you have to know that the content inside it (children elements) will not inherit this property. */
}

.main-title {
    color: #385555;
}

.list-wrapper{
    background-color: white;
    border-radius: 5px;
    width: 90%;
    max-width: 500px;
    max-height: 400px;
    overflow-y: auto; /* <--- Now we need to stop and think about the main axis and cross axis, but what's the
    definition of these terms? The main axis in a normal and flex display it's like an imaginary horizontally  
    line. For being the 'main-axis' the flow of the document follow in line or rows, then when you put a 
    paragraph, title (h1 by example) or a list, you've probably already noticed that the content follow 
    horizontally; this is the main axis. The cross axis, unlike the main axis displays the content vertically
    (by default). So, what's my purpose here? It's just control the height displayed by the content. Instead 
    of loading the content all at once, i prefer that the user scrolls the content as it wants.*/

    box-shadow: 0 2px 6px rgba(0, 0, 0, .2);
}

.list{
    list-style: none;
    padding: 0;
    margin: 0;
}

.list-item{
    display: flex;
    border-bottom: 1px solid #eee;
    padding: 16px;
}

.list-item-image img{
    width: 80px;
    border-radius: 50%;
}

.list-item-content{
    padding: 0 20px;
    flex-grow: 1;
}

.people-name{
    font-size: 24px;
    color: #385555;
    margin: 0;
}

.people-email{
    margin-top: 5px;
    color: #aaa;
}

.list-item:hover{
    background-color: #e8e8e8;
}

.list-item-actions{
    background-color: yellow;
    display: flex;
    gap: 16px; /* The gap property is useful to set spacing between flex-items along the main-axis*/
    align-items: center;
    opacity: 0%;
}

.list-item:hover .list-item-actions{
   opacity: 30%;
}